{"version":3,"sources":["SEO.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SEO","title","description","keywords","siteUrl","siteName","Helmet","lang","name","content","itemProp","rel","href","property","integrity","crossOrigin","async","src","defer","App","useState","numberPeople","setNumberPeople","money","setMoney","onChange","e","target","Number","value","className","style","width","margin","location","type","isNaN","FCC","Maths","quotient","answer","surplus","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.907b87b2.chunk.js","sourcesContent":["import { Helmet } from 'react-helmet';\nconst SEO = ({\n    title,\n    description,\n    keywords,\n    siteUrl,\n    siteName,\n}: {\n    title: string;\n    description: string;\n    keywords: string;\n    siteUrl: string;\n    siteName: string;\n}) => {\n    return (\n        <Helmet>\n            <html lang=\"ja\"></html>\n            <title>{title}</title>\n            <meta name=\"description\" content={description} />\n            <meta name=\"keywords\" content={keywords} />\n            <meta itemProp=\"name\" content={siteName} />\n            <link rel=\"canonical\" href={siteUrl} />\n            <meta property=\"og:site_name\" content={title} />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            <meta property=\"og:url\" content={siteUrl} />\n            <meta property=\"og:locale\" content=\"ja_JP\" />\n            <meta property=\"og:type\" content=\"website\" />\n            <link\n                rel=\"stylesheet\"\n                href=\"https://use.fontawesome.com/releases/v5.1.0/css/all.css\"\n                integrity=\"sha384-lKuwvrZot6UHsBSfcMvOkWwlCMgc0TaWr+30HWe3a4ltaBwTZhyTEggF5tJv8tbt\"\n                crossOrigin=\"anonymous\"></link>\n            <script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n            <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-LT883YWQRK\"></script>\n            <script defer src=\"https://use.fontawesome.com/releases/v5.0.6/js/all.js\"></script>\n            <meta name=\"google-site-verification\" content=\"cjjcWBnEoVL7p0wuvHywaedD6h-3O0B2seFntNkt0jk\" />\n            <meta property=\"twitter:card\" content=\"summary_large_image\" />\n            <meta property=\"twitter:url\" content=\"https://blissful-swartz-9aac04.netlify.app/\" />\n            <meta property=\"twitter:title\" content=\"暇人のブログ\" />\n            <meta property=\"twitter:description\" content=\"暇な高校生が緩く更新するサイト\" />\n            <meta property=\"twitter:image\" content=\"\" />\n        </Helmet>\n    );\n};\nexport default SEO;\n","import { FCC } from 'fcc_typescript';\nimport './App.scss';\nimport { useState } from 'react';\nimport SEO from './SEO';\nconst App = () => {\n    const [numberPeople, setNumberPeople] = useState(0);\n    const [money, setMoney] = useState(0);\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        switch (e.target.name) {\n            case 'money':\n                setMoney(Number(e.target.value));\n                break;\n            case 'Number_of_people':\n                setNumberPeople(Number(e.target.value));\n                break;\n        }\n    };\n    return (\n        <div className=\"App\" style={{ width: '100%', margin: '0px auto' }}>\n            <SEO\n                title=\"割り勘計算機\"\n                description=\"割り勘計算サイト\"\n                keywords=\"割り勘 計算 無料 わりかん けいさん\"\n                // eslint-disable-next-line no-restricted-globals\n                siteUrl={location.href}\n                siteName=\"割り勘\"\n            />\n            <header>\n                <h1>割り勘計算機</h1>\n            </header>\n            <main>\n                <div style={{ width: '10rem', margin: '0px auto' }}>\n                    <p>金額</p>\n                    <input type=\"text\" onChange={onChange} name=\"money\" style={{ width: '10rem', margin: '0px auto' }} />\n                </div>\n                <div style={{ width: '10rem', margin: '0px auto' }}>\n                    <p>人数</p>\n                    <input\n                        type=\"text\"\n                        onChange={onChange}\n                        name=\"Number_of_people\"\n                        style={{ width: '10rem', margin: '0px auto' }}\n                    />\n                </div>\n                <div>\n                    {Number.isNaN(numberPeople) && Number.isNaN(money) ? (\n                        <p>error</p>\n                    ) : (\n                        <>\n                            <p>1人あたり{FCC.Maths.quotient(money, numberPeople).answer}</p>\n                            <p>余り{FCC.Maths.quotient(money, numberPeople).surplus}</p>\n                        </>\n                    )}\n                </div>\n            </main>\n            <footer>\n                <div>\n                    <a href=\"https://twitter.com/manyuta06\" style={{ padding: '20px' }}>\n                        <i className=\"fab fa-twitter fa-2x white\"></i>\n                    </a>\n                    <a href=\"https://github.com/riya81\" style={{ padding: '20px' }}>\n                        <i className=\"fab fa-github fa-2x white\"></i>\n                    </a>\n                </div>\n            </footer>\n        </div>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}